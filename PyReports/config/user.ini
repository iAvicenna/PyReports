; configuration file for html scripts and styles which can be edited by the user. 
; Unless _USE_DEFAULT is set to True by default_config in config.py, this is read after reading 
; the default.ini and so updates its values. You can either change the scripts
; and styles below or can add new ones via the user scripts and user styles 
; entries. In terms of formatting, the only thing that is parsed from here is the
; newline character. tabs are not parsed from here and is automatically
; generated during parsing.


[CONFIG]
type = 
        user

[SCRIPTS]
code script = <script src="https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js"></script>

tab script = 
	    <script>
	    function open_tab(evt, id, name) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByName(name);
          
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            
            tablinks = document.getElementsByClassName("tablinks");
            
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
          
            document.getElementById(id).style.display = "block";
            
            evt.currentTarget.className += " active";
          }
        
        </script>

	    <script>
	    // If acmaps in tabs are set to display:none initally then they are not 
	    // rendered correctly so that is why initially every tab is set to 
	    // display:block and then everything is closed after rendering and only 
	    // first tabs are set to open. This function achieves that.
	    
        function open_defaults( name) {
            var i, tabcontent, tablinks, buttons;
            
            // Close all open tabs
            tabcontent = document.getElementsByClassName(name);
          
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
          
            // Get the element with name="default_open" and click on it
            buttons = document.getElementsByName('default_open');
            for (i=0; i< buttons.length; i++){
                buttons[i].click()
            }
              
        }
        </script>
        
        <script>
	    function open_all_tabs(evt,  name) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByName(name);
          
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "block";
            }
        }
	    </script>
        
	
tex script = 
	    <script type="text/x-mathjax-config">
	        MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});
	    </script>
	    
	    <script type="text/javascript"
	        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
	    </script>
	    
fold script = 

        <script>
            function click_fold(item) {
                item.classList.toggle("active");
                var content = item.nextElementSibling;
                
                if (content.style.maxHeight){
                  content.style.maxHeight = null;
                } else {
                  content.style.maxHeight = content.scrollHeight + "px";
                } 
            }
        </script>
	
user scripts = 

[STYLES]
code style =sons-of-obsidian 

body style = 
	        body {width:max-content; min-width:50%; font-family: Courier New; font-size:16px; padding: 0px; margin:0px}
	        
img style = 
            img {vertical-align: top;}
	        
h styles = 
	        h1 {width:%100; margin-bottom:0em; text-align: left;}
	        h2 {width:%100; margin-bottom:0em; text-align: left; background-color:#e6e8f0; margin-left:-0.4em; padding-left:0.15em}
	        h3 {width:%100; margin-bottom:0em; text-align: left; background-color:#e6e8f0; margin-left:-0.4em; padding-left:0.15em}
	        h4 {width:%100; margin-bottom:0em; text-align: left; background-color:#e6e8f0; margin-left:-0.4em; padding-left:0.15em}
	        h5 {width:%100; margin-bottom:0em; text-align: left; background-color:#e6e8f0; margin-left:-0.4em; padding-left:0.15em}
	        h6 {width:%100; margin-bottom:0em; text-align: left; background-color:#e6e8f0; margin-left:-0.4em; padding-left:0.15em}
	

tab styles = 
	        .tab {
	          overflow: hidden;
	          border: 1px solid #ccc;
	          background-color: #f1f1f1;
	        }
	        
	        /* Style the buttons inside the tab */
	        .tab button {
	          background-color: inherit;
	          float: left;
	          border: none;
	          outline: none;
	          cursor: pointer;
	          padding: 14px 16px;
	          transition: 0.3s;
	          font-size: 17px;
	        }
	        
	        /* Change background color of buttons on hover */
	        .tab button:hover {
	          background-color: #ddd;
	        }
	        
	        /* Create an active/current tablink class */
	        .tab button.active {
	          background-color: #ccc;
	        }
	        
	        /* Style the tab content */
	        .tabcontent {
	          padding: 6px 12px;
	          border: 1px solid #ccc;
	          border-top: none;
	        }
	        
	        /* Style the close button */
	        .topright {
	          float: right;
	          cursor: pointer;
	          font-size: 28px;
	        }
	        
	        .topright:hover {color: red;}
grid styles = 
	        .grid-container {
	          display: inline-grid;
	          grid-column-gap: 10px;
	          grid-row-gap: 10px;
	          padding: 10px;
	          background-color: #e6e8f0;
	        
	        }
	    
	        .grid-item {
	          background-color: #f5f7ff;
	          border: 0px solid rgba(0, 0, 0, 0.8);
	          padding: 5px;
	          font-size: 20px;
	          text-align: center;
	          justify-self: left;
	          align-self: start;
	        }
	    
p style =  
	        p {max-width: 50vw; min-width: 100px; text-align: left;}
	    
fold styles = 

            .fold {
              background-color: #777;
              color: white;
              cursor: pointer;
              padding: 2px;
              margin: 0px;
              width: 100%;
              border: none;
              text-align: left;
              outline: none;
              font-size: 15px;
            }

            .active, .fold:hover {
              background-color: #555;
            }

            .fold:after {
              content: '\002B';
              color: white;
              font-weight: bold;
              float: left;
              margin-left: 5px;
            }

            .active:after {
              content: "\2212";
            }

            .foldcontent {
              padding: 0 18px;
              max-height: 0;
              overflow: hidden;
              transition: max-height 0.2s ease-out;
              background-color: #f1f1f1;
            }

	    
user styles = 